<!DOCTYPE html>
<html>
<head>
  <title>HumanMood</title>
  <link rel="stylesheet" href="/styles.css">
  <!-- Import Chart.js from CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div id="ctaMessage">Let us know how you're feeling right now</div>
    <div id="formContainer">
      <form id="moodForm">
        <button type="submit" name="mood" value="happy" style="background-color: rgba(255, 99, 132, 0.7);">😄</button>
        <button type="submit" name="mood" value="sad" style="background-color: rgba(54, 162, 235, 0.7);">😢</button>
        <button type="submit" name="mood" value="angry" style="background-color: rgba(255, 206, 86, 0.7);">😠</button>
        <button type="submit" name="mood" value="neutral" style="background-color: rgba(75, 192, 192, 0.7);">😐</button>
      </form>
    </div>
    <div id="mood-chart">
      <canvas id="chartCanvas"></canvas>
      <div id="chartDescription">This chart displays all users' moods and is updated every 5 seconds.</div>
    </div>
    
    <script>
      const chartCanvas = document.getElementById('chartCanvas').getContext('2d');
      const moodLabels = ['happy', 'sad', 'angry', 'neutral'];
      const moodIndexMap = {}; // To map mood labels to their indices
      moodLabels.forEach((label, index) => {
        moodIndexMap[label] = index;
      });
    
      const defaultCounts = Array(moodLabels.length).fill(0);
    
      const moodChart = new Chart(chartCanvas, {
        type: 'bar',
        data: {
          labels: moodLabels,
          datasets: [
            {
              label: 'Mood Trend',
              data: defaultCounts,
              backgroundColor: [
                'rgba(255, 99, 132, 0.7)',
                'rgba(54, 162, 235, 0.7)',
                'rgba(255, 206, 86, 0.7)',
                'rgba(75, 192, 192, 0.7)',
              ],
              borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
              ],
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });
    
      // Function to fetch mood data from the server
      async function fetchMoodData() {
        try {
          const response = await fetch('/moods');
          const data = await response.json();
          updateChartData(data);
        } catch (error) {
          console.error('Error fetching mood data:', error);
        }
      }
    
      // Function to update the chart's data
      function updateChartData(moods) {
        const moodCounts = Array(moodLabels.length).fill(0); // Initialize the counts array
    
        // Map the mood counts based on their corresponding labels
        moods.forEach((mood) => {
          const index = moodIndexMap[mood.mood];
          if (index !== undefined) {
            moodCounts[index] = mood.count;
          }
        });
    
        moodChart.data.datasets[0].data = moodCounts;
        moodChart.update();
      }
    
      // Function to update the chart every few seconds
      function updateChart() {
        fetchMoodData();
      }
    
      // Fetch initial data and update chart every 5 seconds
      fetchMoodData();
      setInterval(updateChart, 5000);
    
      // Attach event listeners to the mood buttons
      const moodButtons = document.querySelectorAll('#moodForm button');
      moodButtons.forEach((button) => {
        button.addEventListener('click', async (event) => {
          const mood = event.target.value;
          try {
            await fetch('/submit-mood', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
              },
              body: `mood=${encodeURIComponent(mood)}`,
            });
            fetchMoodData();
          } catch (error) {
            console.error('Error submitting mood:', error);
          }
        });
      });
    </script>
    
  
</body>
</html>
